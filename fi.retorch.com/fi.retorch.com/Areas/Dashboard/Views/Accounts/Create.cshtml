@model fi.retorch.com.Areas.Dashboard.Models.AccountModel

@{
    ViewBag.Title = "Accounts";
}

@section Scripts {
    <script src="~/Scripts/fi/fi.accounts.js"></script>
    <script type="text/javascript">
        $(function () {
            fi.accounts.setup();
        });
    </script>
}

<h2>Accounts</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.TypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.TypeId, Model.Types, String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOpened, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOpened, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DateOpened, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OpeningBalance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OpeningBalanceFormatted, new { htmlAttributes = new { @class = "form-control", Value = String.Format("{0:C}", Model.OpeningBalance) } })
                    @Html.ValidationMessageFor(model => model.OpeningBalance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsDisplayed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsDisplayed)
                        @Html.ValidationMessageFor(model => model.IsDisplayed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsClosed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsClosed)
                        @Html.ValidationMessageFor(model => model.IsClosed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @for (var i = 0; i < Model.Categories.Count(); i++)
                {
                        @Html.HiddenFor(m => m.Categories[i].SelectionId)
                        @Html.HiddenFor(m => m.Categories[i].SelectionName)
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(m => m.Categories[i].IsChecked)
                                @Html.DisplayFor(m => m.Categories[i].SelectionName)
                            </label>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
