@model fi.retorch.com.Areas.Dashboard.Models.ReminderModel

@{
    string SelectOptionText = "-- {0} --";
}

<div class="modal-header hide">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title">Create Reminder</h4>
</div>

<div class="modal-body">
    @using (Ajax.BeginForm("Create", "Reminders", FormMethod.Post, new AjaxOptions
    {
        OnComplete = "fi.reminders.onCreate"
    },
                            new { name = "frmRemindersCreate" })
                            )
    {
        @Html.AntiForgeryToken()

        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <fieldset title="Required">
                <legend>Required</legend>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.AccountId, Model.Accounts, String.Format(SelectOptionText, Html.DisplayNameFor(model => model.AccountId)), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Name) } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.AmountFormatted, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               Value = String.Format("{0:C}", Model.Amount),
                               placeholder = Html.DisplayNameFor(model => model.Amount)
                           }
                       })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12">
                            &nbsp;
                            <label>
                                @Html.RadioButtonFor(model => model.IsCredit, true)
                                <span id="PositiveText">@Model.PositiveText</span>&nbsp;
                            </label>
                            <label>
                                @Html.RadioButtonFor(model => model.IsCredit, false)
                                <span id="NegativeText">@Model.NegativeText</span>
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Rate, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               placeholder = Html.DisplayNameFor(model => model.Rate)
                           }
                       })
                            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.ReminderScheduleId, Model.Schedules, String.Format(SelectOptionText, Html.DisplayNameFor(model => model.ReminderScheduleId)), new
                       {
                           @class = "form-control",
                           placeholder = Html.DisplayNameFor(model => model.ReminderScheduleId)
                       })
                            @Html.ValidationMessageFor(model => model.ReminderScheduleId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.NextDate, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control datepicker",
                                   placeholder = Html.DisplayNameFor(model => model.NextDate)
                               }
                           })
                            @Html.ValidationMessageFor(model => model.NextDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </fieldset>

            <fieldset title="Optional">
                <legend>Optional</legend>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.LastDate, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control datepicker",
                               placeholder = Html.DisplayNameFor(model => model.LastDate)
                           }
                       })
                            @Html.ValidationMessageFor(model => model.LastDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12@(Model.Categories.ToList().Count == 0 ? " hide" : "")" id="divCategories">
                            @Html.DropDownListFor(model => model.CategoryId, Model.Categories, String.Format(SelectOptionText, Html.DisplayNameFor(model => model.CategoryId)), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </fieldset>

            <div class="form-group buttons">
                <div class="row">
                    <div class="col-md-12">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>

        </div>

        <div class="modal-footer hide">
            <div class="row">
                <div class="col-md-4">

                </div>
                <div class="col-md-8 text-right">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>